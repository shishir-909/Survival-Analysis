runif(10)
sort(runif(10))
qnorm(0.00723)
qnorm(0.0784)
qnorm(0.0945)
setwd("I:/My Drive/rao@ualberta.ca 2022-12-08 10 58/shishir@tamu.edu/My Drive/Interesting papers/Survival Models/GitHub/Survival/Survival-Analysis/Blog 2")
library(KMsurv)
library(survival)
library(survMisc) ##Confidence bands not in survival package. survMisc is an extension of the survival package and contains confidence bands
library(tidyverse)
library(readxl)
Mice_data <- data.frame(Time = c(158, 192, 193, 194, 195, 202, 212, 215, 229, 230, 237, 240, 244, 247, 259, 300, 301, 337, 415, 444, 485, 496, 529, 537, 624, 707, 800, 430, 590, 606, 638, 655, 679, 691, 693, 696, 747, 752, 760, 778, 821, 986, 136, 246, 255, 376, 421, 565, 616, 617, 652, 655, 658, 660, 662, 675, 681, 734, 736, 737, 757, 769, 777, 801, 807, 825, 855, 857, 864, 868, 870, 873, 882, 895, 910, 934, 942, 1015, 1019),
endpoint = factor(c(rep(1,0),rep(2, 27), rep(3, 15), rep(4, 37)), levels = 1:4, labels = c("censored","TL", "RCS", "OC")), #This creates a factor with 4 levels. The first level has to be for "censored" observations as per survival package documentation. Since there are no censored observations in my dataset, I coded rep(1,0) for censored.
istate = rep("entry", 79)) ## "entry" is the initial state before any of the 3 competing risk event can happen. Since this is a competing risk scenario - ther are multiple risks, but only one event per subject. That is, any given subject can go from "entry to risk 1" or "entry to risk 2" and so on. We cannot have subjects going from "entry to risk 1 to risk 2" in a competing risks scenario.
tfit <- survival::survfit(survival::Surv(Time, endpoint) ~ 1, data = Mice_data, istate = istate)
summary(tfit) #Note that the Pr(entry) is nothing but the simple Kaplan Meir estimate of the survival function by bucketing all the competing risks as a single risk. This is not that useful in a competing risks scenario.
View(tfit)
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
library(KMsurv)
library(survival)
library(survMisc) ##Confidence bands not in survival package. survMisc is an extension of the survival package and contains confidence bands
library(tidyverse)
library(readxl)
library(readr)
library(survminer)
setwd("I:/My Drive/rao@ualberta.ca 2022-12-08 10 58/shishir@tamu.edu/My Drive/Interesting papers/Survival Models/GitHub/Survival/Survival-Analysis/Blog 2")
ShockAbsorber <- read_csv("Data/ShockAbsorber.csv")
ShockAbsorber <- read_csv("Data/ShockAbsorber.csv")
knitr::kable((ShockAbsorber), caption = "Table 1. Shock Absorber Data", align = rep('c', 3))
# Chunk 1: setup
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
library(KMsurv)
library(survival)
library(survMisc) ##Confidence bands not in survival package. survMisc is an extension of the survival package and contains confidence bands
library(tidyverse)
library(readxl)
library(readr)
library(survminer)
setwd("I:/My Drive/rao@ualberta.ca 2022-12-08 10 58/shishir@tamu.edu/My Drive/Interesting papers/Survival Models/GitHub/Survival/Survival-Analysis/Blog 2")
# Chunk 2
ShockAbsorber <- read_csv("Data/ShockAbsorber.csv")
knitr::kable((ShockAbsorber), caption = "Table 1. Shock Absorber Data", align = rep('c', 3))
ShockAbsorber <- ShockAbsorber %>%
dplyr::mutate(Event = case_when(
`Failure Mode` == "Censored" ~ 0,
`Failure Mode` == "Mode1" ~ 1,
`Failure Mode` == "Mode2" ~ 2
))
ShockAbsorber <- ShockAbsorber %>%
dplyr::mutate(Event_factor = as.factor(Event, levels = 1:3, labels = c("Censored", "Mode 1", "Mode 2")))
ShockAbsorber <- ShockAbsorber %>%
dplyr::mutate(Event_factor = as.factor(Event, levels = 0:2, labels = c("Censored", "Mode 1", "Mode 2")))
# Chunk 1: setup
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
library(KMsurv)
library(survival)
library(survMisc) ##Confidence bands not in survival package. survMisc is an extension of the survival package and contains confidence bands
library(tidyverse)
library(readxl)
library(readr)
library(survminer)
setwd("I:/My Drive/rao@ualberta.ca 2022-12-08 10 58/shishir@tamu.edu/My Drive/Interesting papers/Survival Models/GitHub/Survival/Survival-Analysis/Blog 2")
# Chunk 2
ShockAbsorber <- read_csv("Data/ShockAbsorber.csv")
knitr::kable((ShockAbsorber), caption = "Table 1. Shock Absorber Data", align = rep('c', 3))
ShockAbsorber <- ShockAbsorber %>%
dplyr::mutate(Event = factor(
`Failure Mode`, levels = 1:3, labels = c("Censored", "Mode 1", "Mode 2")
))
# Chunk 1: setup
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
library(KMsurv)
library(survival)
library(survMisc) ##Confidence bands not in survival package. survMisc is an extension of the survival package and contains confidence bands
library(tidyverse)
library(readxl)
library(readr)
library(survminer)
setwd("I:/My Drive/rao@ualberta.ca 2022-12-08 10 58/shishir@tamu.edu/My Drive/Interesting papers/Survival Models/GitHub/Survival/Survival-Analysis/Blog 2")
# Chunk 2
ShockAbsorber <- read_csv("Data/ShockAbsorber.csv")
knitr::kable((ShockAbsorber), caption = "Table 1. Shock Absorber Data", align = rep('c', 3))
ShockAbsorber <- ShockAbsorber %>%
dplyr::mutate(Event = factor(
`Failure Mode`, levels = 0:2, labels = c("Censored", "Mode 1", "Mode 2")
))
ShockAbsorber
View(ShockAbsorber)
# Chunk 1: setup
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
library(KMsurv)
library(survival)
library(survMisc) ##Confidence bands not in survival package. survMisc is an extension of the survival package and contains confidence bands
library(tidyverse)
library(readxl)
library(readr)
library(survminer)
setwd("I:/My Drive/rao@ualberta.ca 2022-12-08 10 58/shishir@tamu.edu/My Drive/Interesting papers/Survival Models/GitHub/Survival/Survival-Analysis/Blog 2")
# Chunk 2
ShockAbsorber <- read_csv("Data/ShockAbsorber.csv")
knitr::kable((ShockAbsorber), caption = "Table 1. Shock Absorber Data", align = rep('c', 3))
ShockAbsorber <- ShockAbsorber %>%
dplyr::mutate(Event = factor(
ShockAbsorber$`Failure Mode`, levels = 0:2, labels = c("Censored", "Mode 1", "Mode 2")
))
View(ShockAbsorber)
levels(ShockAbsorber$Event)
View(ShockAbsorber)
(ShockAbsorber$Event)
ShockAbsorber <- ShockAbsorber %>%
dplyr::mutate(Event = factor(
ShockAbsorber$`Failure Mode`, levels = c(0:2), labels = c("Censored", "Mode 1", "Mode 2")
))
(ShockAbsorber$Event)
# Chunk 1
library(KMsurv)
library(survival)
library(survMisc) ##Confidence bands not in survival package. survMisc is an extension of the survival package and contains confidence bands
library(tidyverse)
library(readxl)
Mice_data <- data.frame(Time = c(158, 192, 193, 194, 195, 202, 212, 215, 229, 230, 237, 240, 244, 247, 259, 300, 301, 337, 415, 444, 485, 496, 529, 537, 624, 707, 800, 430, 590, 606, 638, 655, 679, 691, 693, 696, 747, 752, 760, 778, 821, 986, 136, 246, 255, 376, 421, 565, 616, 617, 652, 655, 658, 660, 662, 675, 681, 734, 736, 737, 757, 769, 777, 801, 807, 825, 855, 857, 864, 868, 870, 873, 882, 895, 910, 934, 942, 1015, 1019),
endpoint = factor(c(rep(1,0),rep(2, 27), rep(3, 15), rep(4, 37)), levels = 1:4, labels = c("censored","TL", "RCS", "OC")), #This creates a factor with 4 levels. The first level has to be for "censored" observations as per survival package documentation. Since there are no censored observations in my dataset, I coded rep(1,0) for censored.
istate = rep("entry", 79)) ## "entry" is the initial state before any of the 3 competing risk event can happen. Since this is a competing risk scenario - ther are multiple risks, but only one event per subject. That is, any given subject can go from "entry to risk 1" or "entry to risk 2" and so on. We cannot have subjects going from "entry to risk 1 to risk 2" in a competing risks scenario.
View(Mice_data)
# Chunk 1: setup
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
library(KMsurv)
library(survival)
library(survMisc) ##Confidence bands not in survival package. survMisc is an extension of the survival package and contains confidence bands
library(tidyverse)
library(readxl)
library(readr)
library(survminer)
setwd("I:/My Drive/rao@ualberta.ca 2022-12-08 10 58/shishir@tamu.edu/My Drive/Interesting papers/Survival Models/GitHub/Survival/Survival-Analysis/Blog 2")
# Chunk 2
ShockAbsorber <- read_csv("Data/ShockAbsorber.csv")
knitr::kable((ShockAbsorber), caption = "Table 1. Shock Absorber Data", align = rep('c', 3))
ShockAbsorber <- ShockAbsorber %>%
dplyr::mutate(`Failure Mode` = factor(
`Failure Mode`, levels = c(0:2), labels = c("Censored", "Mode 1", "Mode 2")
))
View(ShockAbsorber)
# Chunk 1: setup
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
library(KMsurv)
library(survival)
library(survMisc) ##Confidence bands not in survival package. survMisc is an extension of the survival package and contains confidence bands
library(tidyverse)
library(readxl)
library(readr)
library(survminer)
setwd("I:/My Drive/rao@ualberta.ca 2022-12-08 10 58/shishir@tamu.edu/My Drive/Interesting papers/Survival Models/GitHub/Survival/Survival-Analysis/Blog 2")
# Chunk 2
ShockAbsorber <- read_csv("Data/ShockAbsorber.csv")
knitr::kable((ShockAbsorber), caption = "Table 1. Shock Absorber Data", align = rep('c', 3))
ShockAbsorber$`Failure Mode` <- factor(ShockAbsorber$`Failure Mode`)
ShockAbsorber$`Failure Mode`
View(ShockAbsorber)
# Chunk 1: setup
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
library(KMsurv)
library(survival)
library(survMisc) ##Confidence bands not in survival package. survMisc is an extension of the survival package and contains confidence bands
library(tidyverse)
library(readxl)
library(readr)
library(survminer)
setwd("I:/My Drive/rao@ualberta.ca 2022-12-08 10 58/shishir@tamu.edu/My Drive/Interesting papers/Survival Models/GitHub/Survival/Survival-Analysis/Blog 2")
# Chunk 2
ShockAbsorber <- read_csv("Data/ShockAbsorber.csv")
knitr::kable((ShockAbsorber), caption = "Table 1. Shock Absorber Data", align = rep('c', 3))
ShockAbsorber$`Failure Mode` <- factor(ShockAbsorber$`Failure Mode`, levels = c("Censored", "Mode1", "Mode2"))
ShockAbsorber$`Failure Mode`
levels(ShockAbsorber$`Failure Mode`)
fruits <- c(rep("Orange", 2), rep("Apple", 2), rep("Banana", 1))
fruits <- factor(fruits, levels = c("Orange", "Banana", "Apple"))
fruits
remove(fruits)
fruits <- c(rep("Orange", 2), rep("Apple", 2), rep("Banana", 1))
fruits <- factor(fruits)
fruits
# Chunk 1: setup
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
library(KMsurv)
library(survival)
library(survMisc) ##Confidence bands not in survival package. survMisc is an extension of the survival package and contains confidence bands
library(tidyverse)
library(readxl)
library(readr)
library(survminer)
setwd("I:/My Drive/rao@ualberta.ca 2022-12-08 10 58/shishir@tamu.edu/My Drive/Interesting papers/Survival Models/GitHub/Survival/Survival-Analysis/Blog 2")
# Chunk 2
ShockAbsorber <- read_csv("Data/ShockAbsorber.csv")
knitr::kable((ShockAbsorber), caption = "Table 1. Shock Absorber Data", align = rep('c', 3))
ShockAbsorber$`Failure Mode` <- factor(ShockAbsorber$`Failure Mode`, levels = c(0,1,2), labels = c("Censored", "Mode1", "Mode2"))
ShockAbsorber$`Failure Mode`
ShockAbsorber$`Failure Mode` <- as.numeric(ShockAbsorber$`Failure Mode`)
ShockAbsorber$`Failure Mode`
# Chunk 1: setup
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
library(KMsurv)
library(survival)
library(survMisc) ##Confidence bands not in survival package. survMisc is an extension of the survival package and contains confidence bands
library(tidyverse)
library(readxl)
library(readr)
library(survminer)
setwd("I:/My Drive/rao@ualberta.ca 2022-12-08 10 58/shishir@tamu.edu/My Drive/Interesting papers/Survival Models/GitHub/Survival/Survival-Analysis/Blog 2")
# Chunk 2
ShockAbsorber <- read_csv("Data/ShockAbsorber.csv")
knitr::kable((ShockAbsorber), caption = "Table 1. Shock Absorber Data", align = rep('c', 3))
ShockAbsorber$`Failure Mode` <- factor(ShockAbsorber$`Failure Mode`, levels = c("Censored", "Mode1", "Mode2"))
ShockAbsorber$`Failure Mode` <- as.numeric(ShockAbsorber$`Failure Mode`)
ShockAbsorber$`Failure Mode`
# Chunk 1: setup
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
library(KMsurv)
library(survival)
library(survMisc) ##Confidence bands not in survival package. survMisc is an extension of the survival package and contains confidence bands
library(tidyverse)
library(readxl)
library(readr)
library(survminer)
setwd("I:/My Drive/rao@ualberta.ca 2022-12-08 10 58/shishir@tamu.edu/My Drive/Interesting papers/Survival Models/GitHub/Survival/Survival-Analysis/Blog 2")
# Chunk 2
ShockAbsorber <- read_csv("Data/ShockAbsorber.csv")
knitr::kable((ShockAbsorber), caption = "Table 1. Shock Absorber Data", align = rep('c', 3))
ShockAbsorber$`Failure Mode` <- factor(ShockAbsorber$`Failure Mode`, levels = c("Censored", "Mode1", "Mode2"))
ShockAbsorber$`Failure Mode`
levels(ShockAbsorber$`Failure Mode`)
# Chunk 1
library(KMsurv)
library(survival)
library(survMisc) ##Confidence bands not in survival package. survMisc is an extension of the survival package and contains confidence bands
library(tidyverse)
library(readxl)
Mice_data <- data.frame(Time = c(158, 192, 193, 194, 195, 202, 212, 215, 229, 230, 237, 240, 244, 247, 259, 300, 301, 337, 415, 444, 485, 496, 529, 537, 624, 707, 800, 430, 590, 606, 638, 655, 679, 691, 693, 696, 747, 752, 760, 778, 821, 986, 136, 246, 255, 376, 421, 565, 616, 617, 652, 655, 658, 660, 662, 675, 681, 734, 736, 737, 757, 769, 777, 801, 807, 825, 855, 857, 864, 868, 870, 873, 882, 895, 910, 934, 942, 1015, 1019),
endpoint = factor(c(rep(1,0),rep(2, 27), rep(3, 15), rep(4, 37)), levels = 1:4, labels = c("censored","TL", "RCS", "OC")), #This creates a factor with 4 levels. The first level has to be for "censored" observations as per survival package documentation. Since there are no censored observations in my dataset, I coded rep(1,0) for censored.
istate = rep("entry", 79)) ## "entry" is the initial state before any of the 3 competing risk event can happen. Since this is a competing risk scenario - ther are multiple risks, but only one event per subject. That is, any given subject can go from "entry to risk 1" or "entry to risk 2" and so on. We cannot have subjects going from "entry to risk 1 to risk 2" in a competing risks scenario.
levels(Mice_data$endpoint)
levels(ShockAbsorber$`Failure Mode`)
