Surv(time = time, event = status, type = 'right') ~ factor(temperature),
data = capacitor[which(capacitor$voltage==200),],
rho = 0
)
survival::survdiff(
Surv(time = time, event = status, type = 'right') ~ factor(temperature),
data = capacitor[which(capacitor$voltage==250),],
rho = 0
)
survival::survdiff(
Surv(time = time, event = status, type = 'right') ~ factor(temperature),
data = capacitor[which(capacitor$voltage==300),],
rho = 0
)
survival::survdiff(
Surv(time = time, event = status, type = 'right') ~ factor(temperature),
data = capacitor[which(capacitor$voltage==350),],
rho = 0
)
survival::survdiff(
Surv(time = time, event = status, type = 'right') ~ factor(temperature),
data = capacitor[which(capacitor$voltage==200),],
rho = 0
)
survival::survdiff(
Surv(time = time, event = status, type = 'right') ~ factor(temperature),
data = capacitor[which(capacitor$voltage==250),],
rho = 0
)
survival::survdiff(
Surv(time = time, event = status, type = 'right') ~ factor(temperature),
data = capacitor[which(capacitor$voltage==300),],
rho = 0
)
survival::survdiff(
Surv(time = time, event = status, type = 'right') ~ factor(temperature),
data = capacitor[which(capacitor$voltage==350),],
rho = 0
)
survival::survdiff(
Surv(time = time, event = status, type = 'right') ~ factor(temperature),
data = capacitor[which(capacitor$voltage==250),],
rho = 0
)
data(reliability, package = 'survival')
imotor <- imotor
View(imotor)
ApplianceCord <- read_csv("Data/ApplianceCord.csv")
View(ApplianceCord)
ApplianceCord <- read_csv("Data/ApplianceCord.csv") %>%
dplyr::mutate(Status = case_when(`Censoring Indicator` == "Failed" ~ 1, `Censoring Indicator` == "Censored" ~ 0))
ApplianceCord <- read_csv("Data/ApplianceCord.csv") %>%
dplyr::mutate(Status = case_when(`Censoring Indicator` == "Failed" ~ 1, `Censoring Indicator` == "Censored" ~ 0)) %>%
dplyr::rename(Type = `Cord Type`)
survival::survdiff(
survival::Surv(time = Hours, event = Status, type = 'right') ~ Type,
data = ApplianceCord,
rho = 0
) ##rho = 0 gives log rank test
diff1 <- survival::survdiff(
survival::Surv(time = Hours, event = Status, type = 'right') ~ Type,
data = ApplianceCord,
rho = 0
) ##rho = 0 gives log rank test
View(diff1)
diff1[["var"]]
1-pnorm(0.036)
survfit(Surv(time = Hours, event = Status) ~ 1, data = ApplianceCord)
summary(survfit(Surv(time = Hours, event = Status) ~ 1, data = ApplianceCord))
diff1 <- survival::survdiff(
survival::Surv(time = Hours, event = Status, type = 'right') ~ Type,
data = ApplianceCord,
rho = 0
) ##rho = 0 gives log rank test
diff1
1-pchisq(0.0937,1)
diff1[["var"]]
pnorm(-0.3043)
1-pnorm(0.036)
2*(1-pnorm(0.036))
1-pnorm(0.036)
1-pnorm(0.00295094)
1-pnorm(0.3043)
2*(1-pnorm(3.72))
1*(1-pnorm(3.72))
2*(1-pnorm(0.036))
fit_ApplianceCord <- survival::survfit(
Surv(time = Hours, event = Status) ~ Type,
data = ApplianceCord,
conf.type = "log",
conf.int = 0.95
)
survminer::ggsurvplot(
fit_ApplianceCord,
data = ApplianceCord,
risk.table = T,
conf.int = T
)
summary(survfit(Surv(time = Hours, event = Status) ~ 1, data = ApplianceCord))
PartA <- read_csv("Data/PartA.csv")
View(PartA)
PartA <- read_csv("Data/PartA.csv") %>%
dplyr::mutate(Status = rep(1,nrow()))
PartA <- read_csv("Data/PartA.csv") %>%
dplyr::mutate(Status = rep(1,nrow(PartA)))
PartA <- read_csv("Data/PartA.csv") %>%
dplyr::mutate(Status = rep(1,nrow(PartA))) %>%
dplyr::rename(Cycles = `Thousands of Cycles`,
Operator = `Operator Number`)
fit_PartA <- survival::survfit(
Surv(time = Cycles, event = Status) ~ Operator,
data = PartA,
conf.type = "log",
conf.int = 0.95
)
survminer::ggsurvplot(
fit_PartA,
data = PartA,
risk.table = T,
conf.int = T
)
survival::survdiff(Surv(time = Cycles, event = Status) ~ Operator,
data = PartA,
rho = 0)
??survdiff
diff1 <- survival::survdiff(Surv(time = Cycles, event = Status) ~ Operator,
data = PartA,
rho = 0) #rho = 0 for a log rank test
diff1
View(diff1)
diff1[["var"]]
# Chunk 1
library(KMsurv)
library(survival)
library(survMisc) ##Confidence bands not in survival package. survMisc is an extension of the survival package and contains confidence bands
library(tidyverse)
library(readxl)
library(readr)
# Chunk 2
data("bnct")
# Chunk 3
survival::survdiff(Surv(time, death) ~ trt, data = bnct)
# Chunk 4
#Comparing untreated vs radiation groups
survival::survdiff(Surv(time, death) ~ trt, data = bnct[which(bnct$trt != 3),], rho = 0) ##rho = 0 gives log rank test
#Comparing untreated vs (radiation + BPA) groups
survival::survdiff(Surv(time, death) ~ trt, data = bnct[which(bnct$trt != 2),], rho = 0) ##rho = 0 gives log rank test
#Comparing radiation vs (radiation + BPA) groups
survival::survdiff(Surv(time, death) ~ trt, data = bnct[which(bnct$trt != 1),], rho = 0) ##rho = 0 gives log rank test
#Bonferroni method of multiple comparison for 2 sided test
#Compare all the p-values from the above pairwise tests to alpha/K(K-1) i.e
0.05/(3*(3-1))
#For a 1-sided test
0.05/((3*(3-1))/2)
# Chunk 5
global_test <- survival::survdiff(Surv(time, death) ~ trt, data = bnct)
Z.j <- global_test$obs - global_test$exp
sigma <- global_test$var
sigma
# Chunk 1: Load Libraries
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
library(KMsurv)
library(survival)
library(survMisc) ##Confidence bands not in survival package. survMisc is an extension of the survival package and contains confidence bands
library(tidyverse)
library(readxl)
library(readr)
library(survminer)
library(kableExtra)
setwd("G:/My Drive/rao@ualberta.ca 2022-12-08 10 58/shishir@tamu.edu/My Drive/Interesting papers/Survival Models/GitHub/Survival/Survival-Analysis/Blog 4")
PartA <- read_csv("Data/PartA.csv") %>%
dplyr::mutate(Status = rep(1,nrow(PartA))) %>%
dplyr::rename(Cycles = `Thousands of Cycles`,
Operator = `Operator Number`)
# Chunk 1: Load Libraries
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
library(KMsurv)
library(survival)
library(survMisc) ##Confidence bands not in survival package. survMisc is an extension of the survival package and contains confidence bands
library(tidyverse)
library(readxl)
library(readr)
library(survminer)
library(kableExtra)
setwd("G:/My Drive/rao@ualberta.ca 2022-12-08 10 58/shishir@tamu.edu/My Drive/Interesting papers/Survival Models/GitHub/Survival/Survival-Analysis/Blog 4")
PartA <- read_csv("Data/PartA.csv")
PartA <- PartA %>%
dplyr::mutate(Status = rep(1,nrow(PartA))) %>%
dplyr::rename(Cycles = `Thousands of Cycles`,
Operator = `Operator Number`)
knitr::kable((PartA), caption = "Table 1. Part A Life Test", align = rep('c', 3))
fit_PartA <- survival::survfit(
Surv(time = Cycles, event = Status) ~ Operator,
data = PartA,
conf.type = "log",
conf.int = 0.95
)
survminer::ggsurvplot(
fit_PartA,
data = PartA,
risk.table = T,
conf.int = T
)
diff1 <- survival::survdiff(Surv(time = Cycles, event = Status) ~ Operator,
data = PartA,
rho = 0) #rho = 0 for a log rank test
diff1
diff1[["var"]]
# Chunk 1: Load Libraries
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
library(KMsurv)
library(survival)
library(survMisc) ##Confidence bands not in survival package. survMisc is an extension of the survival package and contains confidence bands
library(tidyverse)
library(readxl)
library(readr)
library(survminer)
library(kableExtra)
setwd("G:/My Drive/rao@ualberta.ca 2022-12-08 10 58/shishir@tamu.edu/My Drive/Interesting papers/Survival Models/GitHub/Survival/Survival-Analysis/Blog 4")
# Chunk 2
PartA <- read_csv("Data/PartA.csv")
PartA <- PartA %>%
dplyr::mutate(Status = rep(1,nrow(PartA))) %>%
dplyr::rename(Cycles = `Thousands of Cycles`,
Operator = `Operator Number`)
knitr::kable((PartA), caption = "Table 1. Part A Life Test", align = rep('c', 3), table.envir = 'table*') %>%
kableExtra::kable_styling("striped", full_width = T, position = "left") %>%
kableExtra::scroll_box(height = "200px")
# Chunk 3
fit_PartA <- survival::survfit(
Surv(time = Cycles, event = Status) ~ Operator,
data = PartA,
conf.type = "log",
conf.int = 0.95
)
survminer::ggsurvplot(
fit_PartA,
data = PartA,
risk.table = T,
conf.int = T
)
# Chunk 4
diff1 <- survival::survdiff(Surv(time = Cycles, event = Status) ~ Operator,
data = PartA,
rho = 0) #rho = 0 for a log rank test
diff1
# Chunk 5
diff1[["var"]]
diff1[["var"]]
View(diff1)
diff1[["var"]]
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
library(KMsurv)
library(survival)
library(survMisc) ##Confidence bands not in survival package. survMisc is an extension of the survival package and contains confidence bands
library(tidyverse)
library(readxl)
library(readr)
library(survminer)
library(kableExtra)
setwd("G:/My Drive/rao@ualberta.ca 2022-12-08 10 58/shishir@tamu.edu/My Drive/Interesting papers/Survival Models/GitHub/Survival/Survival-Analysis/Blog 4")
PartA <- read_csv("Data/PartA.csv")
PartA <- PartA %>%
dplyr::mutate(Status = rep(1,nrow(PartA))) %>%
dplyr::rename(Cycles = `Thousands of Cycles`,
Operator = `Operator Number`)
knitr::kable((PartA), caption = "Table 1. Part A Life Test", align = rep('c', 3), table.envir = 'table*') %>%
kableExtra::kable_styling("striped", full_width = T, position = "left") %>%
kableExtra::scroll_box(height = "200px")
fit_PartA <- survival::survfit(
Surv(time = Cycles, event = Status) ~ Operator,
data = PartA,
conf.type = "log",
conf.int = 0.95
)
survminer::ggsurvplot(
fit_PartA,
data = PartA,
risk.table = T,
conf.int = T
)
diff1 <- survival::survdiff(Surv(time = Cycles, event = Status) ~ Operator,
data = PartA,
rho = 0) #rho = 0 for a log rank test
diff1
diff1[["var"]]
2*(1-pnorm(6.62))
2*(1-pnorm(6.62))
citation()
version$version.string
install.packages("report")
report::cite_packages()
# Chunk 1: Load Libraries
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
library(survival)
library(tidyverse)
library(readr)
library(survminer)
library(kableExtra)
setwd("G:/My Drive/rao@ualberta.ca 2022-12-08 10 58/shishir@tamu.edu/My Drive/Interesting papers/Survival Models/GitHub/Survival/Survival-Analysis/Blog 4")
# Chunk 2
PartA <- read_csv("Data/PartA.csv")
PartA <- PartA %>%
dplyr::mutate(Status = rep(1,nrow(PartA))) %>%
dplyr::rename(Cycles = `Thousands of Cycles`,
Operator = `Operator Number`)
knitr::kable((PartA), caption = "Table 1. Part A Life Test", align = rep('c', 3), table.envir = 'table*') %>%
kableExtra::kable_styling("striped", full_width = T, position = "left") %>%
kableExtra::scroll_box(height = "200px")
# Chunk 3
fit_PartA <- survival::survfit(
Surv(time = Cycles, event = Status) ~ Operator,
data = PartA,
conf.type = "log",
conf.int = 0.95
)
survminer::ggsurvplot(
fit_PartA,
data = PartA,
risk.table = T,
conf.int = T
)
# Chunk 4
diff1 <- survival::survdiff(Surv(time = Cycles, event = Status) ~ Operator,
data = PartA,
rho = 0) #rho = 0 for a log rank test
diff1
# Chunk 5
diff1[["var"]]
# Chunk 6
2*(1-pnorm(6.62))
# Chunk 7
data(reliability, package = 'survival')
capacitor <- capacitor %>%
dplyr::select(!fail) #Removing the column fail
knitr::kable(capacitor, caption = "Table 1. Capacitor Data", align = rep('c', 5), table.envir = 'table*') %>%
kableExtra::kable_styling("striped", full_width = T, position = "left") %>%
kableExtra::scroll_box(height = "200px")
# Chunk 8
fit_capacitor <- survival::survfit(
Surv(time = time, event = status) ~ factor(temperature),
data = capacitor,
conf.type = "log",
conf.int = 0.95
)
survminer::ggsurvplot(
fit_capacitor,
data = capacitor,
risk.table = T,
conf.int = T
)
# Chunk 9
survival::survdiff(
Surv(time = time, event = status, type = 'right') ~ factor(temperature),
data = capacitor,
rho = 0
)
# Chunk 10
survival::survdiff(
Surv(time = time, event = status, type = 'right') ~ factor(temperature) + strata(factor(voltage)),
data = capacitor,
rho = 0
)
# Chunk 11
survival::survdiff(
Surv(time = time, event = status, type = 'right') ~ factor(temperature),
data = capacitor[which(capacitor$voltage==200),],
rho = 0
)
survival::survdiff(
Surv(time = time, event = status, type = 'right') ~ factor(temperature),
data = capacitor[which(capacitor$voltage==250),],
rho = 0
)
survival::survdiff(
Surv(time = time, event = status, type = 'right') ~ factor(temperature),
data = capacitor[which(capacitor$voltage==300),],
rho = 0
)
survival::survdiff(
Surv(time = time, event = status, type = 'right') ~ factor(temperature),
data = capacitor[which(capacitor$voltage==350),],
rho = 0
)
report::cite_packages()
# Chunk 1: Load Libraries
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
library(survival)
library(tidyverse)
library(readr)
library(survminer)
library(kableExtra)
setwd("G:/My Drive/rao@ualberta.ca 2022-12-08 10 58/shishir@tamu.edu/My Drive/Interesting papers/Survival Models/GitHub/Survival/Survival-Analysis/Blog 4")
# Chunk 2
PartA <- read_csv("Data/PartA.csv")
PartA <- PartA %>%
dplyr::mutate(Status = rep(1,nrow(PartA))) %>%
dplyr::rename(Cycles = `Thousands of Cycles`,
Operator = `Operator Number`)
knitr::kable((PartA), caption = "Table 1. Part A Life Test", align = rep('c', 3), table.envir = 'table*') %>%
kableExtra::kable_styling("striped", full_width = T, position = "left") %>%
kableExtra::scroll_box(height = "200px")
# Chunk 3
fit_PartA <- survival::survfit(
Surv(time = Cycles, event = Status) ~ Operator,
data = PartA,
conf.type = "log",
conf.int = 0.95
)
survminer::ggsurvplot(
fit_PartA,
data = PartA,
risk.table = T,
conf.int = T
)
# Chunk 4
diff1 <- survival::survdiff(Surv(time = Cycles, event = Status) ~ Operator,
data = PartA,
rho = 0) #rho = 0 for a log rank test
diff1
# Chunk 5
diff1[["var"]]
# Chunk 6
2*(1-pnorm(6.62))
# Chunk 7
data(reliability, package = 'survival')
capacitor <- capacitor %>%
dplyr::select(!fail) #Removing the column fail
knitr::kable(capacitor, caption = "Table 1. Capacitor Data", align = rep('c', 5), table.envir = 'table*') %>%
kableExtra::kable_styling("striped", full_width = T, position = "left") %>%
kableExtra::scroll_box(height = "200px")
# Chunk 8
fit_capacitor <- survival::survfit(
Surv(time = time, event = status) ~ factor(temperature),
data = capacitor,
conf.type = "log",
conf.int = 0.95
)
survminer::ggsurvplot(
fit_capacitor,
data = capacitor,
risk.table = T,
conf.int = T
)
# Chunk 9
survival::survdiff(
Surv(time = time, event = status, type = 'right') ~ factor(temperature),
data = capacitor,
rho = 0
)
# Chunk 10
survival::survdiff(
Surv(time = time, event = status, type = 'right') ~ factor(temperature) + strata(factor(voltage)),
data = capacitor,
rho = 0
)
# Chunk 11
survival::survdiff(
Surv(time = time, event = status, type = 'right') ~ factor(temperature),
data = capacitor[which(capacitor$voltage==200),],
rho = 0
)
survival::survdiff(
Surv(time = time, event = status, type = 'right') ~ factor(temperature),
data = capacitor[which(capacitor$voltage==250),],
rho = 0
)
survival::survdiff(
Surv(time = time, event = status, type = 'right') ~ factor(temperature),
data = capacitor[which(capacitor$voltage==300),],
rho = 0
)
survival::survdiff(
Surv(time = time, event = status, type = 'right') ~ factor(temperature),
data = capacitor[which(capacitor$voltage==350),],
rho = 0
)
report::cite_packages()
package_version(survival)
package_version("survival")
package_version('survival')
packageVersion('survival')
setwd("G:/My Drive/rao@ualberta.ca 2022-12-08 10 58/shishir@tamu.edu/My Drive/Interesting papers/Survival Models/GitHub/Survival/Survival-Analysis/Blog 5")
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
library(survival)
library(tidyverse)
library(readr)
library(survminer)
library(kableExtra)
library(flexsurv)
setwd("G:/My Drive/rao@ualberta.ca 2022-12-08 10 58/shishir@tamu.edu/My Drive/Interesting papers/Survival Models/GitHub/Survival/Survival-Analysis/Blog 5")
